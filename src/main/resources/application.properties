server.error.whitelabel.enabled=false
spring.application.name=FileStorm
spring.servlet.multipart.max-file-size=10GB
spring.servlet.multipart.max-request-size=11GB
spring.servlet.multipart.enabled=true
spring.servlet.multipart.location=D:/file_storage/file_storm/files
spring.web.resources.add-mappings=false

# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true
# logging.level.org.hibernate.SQL=DEBUG

# Database Properties
spring.datasource.url=${FILESTORM_DB_URL}
spring.datasource.username=${FILESTORM_DB_USERNAME}
spring.datasource.password=${FILESTORM_DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update



# FileStorm Server Config
# Storage
filestorm-server-config.available_storage_per_account_gb=50
filestorm-server-config.file_storage_location=D:/file_storage/file_storm/files
filestorm-server-config.client_location=D:/Code Files/Projects/FileStorm/FileStorm_server/src/main/resources/static/index.html
# HTTP 
filestorm-server-config.domain=${FILESTORM_DOMAIN}
#Security
filestorm-server-config.jwt_secret=${FILESTORM_JWT_SECRET}